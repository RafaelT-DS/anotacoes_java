start.spring.io

Maven -> Projeto da Apache que faz o processo de build de uma maneira mais fácil e uniforme.

- Para inicializar o projeto com Spring Boot, devemos utilizar a classe com o método main;
- Para criar um controller, utilizamos as anotações @Controller e @RequestMapping.

- Por padrão, o Spring considera que o retorno do método é o nome da página que ele deve carregar, mas ao utilizar a anotação @ResponseBody, indicamos que o retorno do método deve ser serializado e devolvido no corpo da resposta.

O módulo DevTools inclui ferramentas utilitárias no projeto, dentre elas a Automatic Restart, que reinicia o servidor automaticamente ao detectar alterações no código fonte da aplicação.

REST - Representional State Transfer

Identificador de Recursos (URI). Cada recurso terá uma URI. Ex:

- Aluno (/alunos)
- Topico (/topicos)
- Resposta (/respostas)
- Curso (/cursos)

Nesta aula, aprendemos:

Sobre a API que desenvolveremos ao longo do curso e sobre as classes de domínio dela;

Que, para um método no controller não encaminhar a requisição a uma página JSP, ou Thymeleaf, devemos utilizar a anotação @ResponseBody;

Que o Spring, por padrão, converte os dados no formato JSON, utilizando a biblioteca Jackson;

Que, para não repetir a anotação @ResponseBody em todos os métodos do controller, devemos utilizar a anotação @RestController;

Que, para não precisar reiniciar manualmente o servidor a cada alteração feita no código, basta utilizar o módulo Spring Boot DevTools;

Que não é uma boa prática retornar entidades JPA nos métodos dos controllers, sendo mais indicado retornar classes que seguem o padrão DTO (Data Transfer Object);

Os principais conceitos sobre o modelo arquitetural REST, como recursos, URIs, verbos HTTP, Representações e comunicação stateless.

